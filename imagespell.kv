Root:
	orientation: 'vertical'
	ActionBarWidget:
		id: actionbar
	BoxLayout:
		BoxLayout:
			canvas.before:
				Color:
					rgba: .05, .05, .05, 1
				Rectangle:
					pos: self.pos
					size: self.size
			orientation: 'vertical'
			size_hint_x: .2
			MenuWidget:
				size_hint_y: .5
			Splitter:
				id: properties
				sizable_from: 'top'
				size_hint_y: .5
		BoxLayout:
			id: viewport
			size_hint_x: .8
			Label:
				text: 'Welcome to ImageSpell !'
				font_size: 30

<ActionBarWidget>:
	pos_hint: {'top': 1}
	ActionView:
		use_separator: True
		ActionPrevious:
			title: 'ImageSpell'
			with_previous: False
		ActionGroup:
			text: 'Image'
			mode: 'spinner'
			size_hint_x: None
			width: 90
			ActionButton:
				text: 'Open'
				on_release: root.parent.show_load()
			ActionButton:
				text: 'Save'
				on_release: root.parent.show_save()

<MenuWidget>:
	GridLayout:
		cols: 1
		size_hint_y: None
		height: 330
		Button:
			text: 'Rotate'
			size_hint: 1, None
			height: 30
			on_release: root.parent.parent.parent.on_rotate()
		Button:
			text: 'Resize'
			size_hint: 1, None
			height: 30
			on_release: root.parent.parent.parent.on_resize()
		Button:
			text: 'Sampling'
			size_hint: 1, None
			height: 30
		Button:
			text: 'Quantization'
			size_hint: 1, None
			height: 30
		Button:
			text: 'Histogram Equalization'
			size_hint: 1, None
			height: 30
		Button:
			text: 'Mask'
			size_hint: 1, None
			height: 30
		Button:
			text: 'Filter'
			size_hint: 1, None
			height: 30
		Button:
			text: 'Edge Detection'
			size_hint: 1, None
			height: 30
		Button:
			text: 'Colormap'
			size_hint: 1, None
			height: 30
		Button:
			text: 'Segmentation'
			size_hint: 1, None
			height: 30
		Button:
			text: 'Morfologi'
			size_hint: 1, None
			height: 30

<RotatePropertyWidget>:
	cols: 1
	row_default_height: 30
	row_force_default: True
	spacing: 0, 5
	Label:
		canvas.before:
			Color:
				rgba: 1, 1, 1, .1
			Rectangle:
				pos: self.pos
				size: self.size
		text: 'Rotation'
	Slider:
		id: rotation
		min: 0
		max: 360
		on_value:  if not(root.parent is None): root.parent.parent.parent.parent.on_rotate_update()

<ResizePropertyWidget>:
	cols: 1
	row_default_height: 30
	row_force_default: True
	spacing: 0, 5
	Label:
		canvas.before:
			Color:
				rgba: 1, 1, 1, .1
			Rectangle:
				pos: self.pos
				size: self.size
		text: 'Width Scale'
	FloatInput:
		id: width_scale
		text: '1'
		on_text: if not(root.parent is None): root.parent.parent.parent.parent.on_resize_update()
	Label:
		canvas.before:
			Color:
				rgba: 1, 1, 1, .1
			Rectangle:
				pos: self.pos
				size: self.size
		text: 'Height Scale'
	FloatInput:
		id: height_scale
		text: '1'
		on_text: if not(root.parent is None): root.parent.parent.parent.parent.on_resize_update()

<SingleDisplayWidget>:
	RelativeLayout:
		size_hint: 1, 1
		Image:
			id: image
			source: 'empty.png'
		Label:
			id: label
			halign: 'right'
			valign: 'top'
			text_size: self.size
			padding: 5, 1
			text: 'blank'
		Label:
			halign: 'left'
			valign: 'bottom'
			text_size: self.size
			padding: 5, 1
			text: "1 : " + ("%.2f" % max(1, image.texture_size[0]/image.width))


<QuadDisplayWidget>:
	canvas.after:
		Color:
			rgba: .05, .05, .05, 1
		Line:
			points: self.x+1, self.y+self.height/2, self.x+self.width, self.y+self.height/2
			width: 2
		Line:
			points: self.x+self.width/2, self.y, self.x+self.width/2, self.y+self.height
			width: 2
	orientation: 'vertical'
	BoxLayout:
		size_hint_y: .5
		RelativeLayout:
			size_hint_x: .5
			Image:
				id: top_left_image
				allow_stretch: True
				source: 'empty.png'
			Label:
				id: top_left_label
				halign: 'right'
				valign: 'top'
				text_size: self.size
				padding: 5, 1
				text: 'top left'
			Label:
				halign: 'left'
				valign: 'bottom'
				text_size: self.size
				padding: 5, 1
				text: "1 : " + ("%.2f" % max(1, top_left_image.texture_size[0]/top_left_image.width))
		RelativeLayout:
			size_hint_x: .5
			Image:
				id: top_right_image
				allow_stretch: True
				source: 'empty.png'
			Label:
				id: top_right_label
				halign: 'right'
				valign: 'top'
				text_size: self.size
				padding: 5, 1
				text: 'top right'
			Label:
				halign: 'left'
				valign: 'bottom'
				text_size: self.size
				padding: 5, 1
				text: "1 : " + ("%.2f" % max(1, top_right_image.texture_size[0]/top_right_image.width))
	BoxLayout:
		size_hint_y: .5
		RelativeLayout:
			size_hint_x: .5
			Image:
				id: bottom_left_image
				allow_stretch: True
				source: 'empty.png'
			Label:
				id: bottom_left_label
				halign: 'right'
				valign: 'top'
				text_size: self.size
				padding: 5, 1
				text: 'bottom left'
			Label:
				halign: 'left'
				valign: 'bottom'
				text_size: self.size
				padding: 5, 1
				text: "1 : " + ("%.2f" % max(1, bottom_left_image.texture_size[0]/bottom_left_image.width))
		RelativeLayout:
			size_hint_x: .5
			Image:
				id: bottom_right_image
				allow_stretch: True
				source: 'empty.png'
			Label:
				id: bottom_right_label
				halign: 'right'
				valign: 'top'
				text_size: self.size
				padding: 5, 1
				text: 'bottom right'
			Label:
				halign: 'left'
				valign: 'bottom'
				text_size: self.size
				padding: 5, 1
				text: "1 : " + ("%.2f" % max(1, bottom_right_image.texture_size[0]/bottom_right_image.width))

<LoadDialog>:
	BoxLayout:
		size: root.size
		pos: root.pos
		orientation: "vertical"
		FileChooserIconView:
			id: filechooser

		BoxLayout:
			size_hint_y: None
			height: 30
			Button:
				text: "Cancel"
				on_release: root.cancel()

			Button:
				text: "Load"
				on_release: root.load(filechooser.path, filechooser.selection)

<SaveDialog>:
	text_input: text_input
	BoxLayout:
		size: root.size
		pos: root.pos
		orientation: 'vertical'
		FileChooserIconView:
			id: filechooser
			on_selection: text_input.text = self.selection and self.selection[0] or ''
		TextInput:
			id: text_input
			size_hint_y: None
			height: 30
			multiline: False
		BoxLayout:
			size_hint_y: None
			height: 30
			Button:
				text: 'Cancel'
				on_release: root.cancel()
			Button:
				text: 'Save'
				on_release: root.save(filechooser.path, text_input.text)
